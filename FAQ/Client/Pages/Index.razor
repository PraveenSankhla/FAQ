@page "/"
@using FAQ.Shared;
@inject NavigationManager nav
@inject HttpClient Http
<PageTitle>FAQ App</PageTitle>

<div class="container">
    <div class="card bg-primary pb-4 pt-4 text-white d-flex flex-row justify-content-center align-content-center">
        <h1>&nbsp; Frequently Asked Questions</h1>
    </div>

    <div class="col-12 mt-4 d-flex">
        <div class="col-4"></div>
        <div class="col-8">
            <nav class="navbar navbar-expand-lg navbar-light">
                <a class="navbar-brand" @onclick=" _ => Filter()">All FAQs</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        @foreach (var topic in topics)
                        {
                            <li class="nav-item active">
                                <a class="nav-link filter" @onclick="_ => Filter(topic.Id, 1)">@topic.Title</a>
                            </li>
                        }
                    </ul>
                </div>
            </nav>
        </div>
    </div>

    <div class="col-12 d-flex m-2 mt-4">
        <div class="col-2 align-content-center m-4 mb-0">
            @foreach (var category in categorys)
            {
                <div class="card p-2 text-center text-primary">
                    <a class="filter" @onclick="_ => Filter(category.Id, 2)">@category.Title</a>
                </div>
            }
        </div>
        <div class="col-8 m-2 mt-0 mb-0 mx-5">
            @foreach (var faq in faqslist)
            {
                <div class="card p-2 pb-0">
                    <div class="d-flex">
                        <h6 class="card-text">@faq.Question </h6>
                        <p class="small mx-1"> @faq.Answer</p>
                    </div>
                    <div class="bottom-0 d-flex justify-content-between m-2 mt-0 mb-0">
                        <p class="small">Topic : @faq.Topic</p>
                        <p class="small">Category : @faq.Category</p>
                    </div>
                </div>
            }
        </div>

    </div>
</div>


@code
{
    List<FAQs> faqslist = new();
    [Parameter]
    public string TopicName { get; set; }
    [Parameter]
    public string CategoryName { get; set; }
    FAQs faq = new();
    List<Filter> topics = new();
    List<Filter> categorys = new();

    protected override async Task OnInitializedAsync()
    {
        categorys = await faqservice.GetCategory();
        topics = await faqservice.GetTopic();
        faqslist = await faqservice.GetFAQ(faq);
    }

    public async Task Filter()
    {
        faqslist = await faqservice.GetFAQ(faq);
    }

    public async Task Filter(string Id, int FilterType)
    {
        if (FilterType == 1)
        {
            var a = (TopicEnum)Convert.ToInt16(Id);
            TopicName = a.ToString();
            faq.Topic = a.ToString();
            nav.NavigateTo("/topic/" + TopicName);
        }
        else
        {
            var a = (CategoryEnum)Convert.ToInt16(Id);
            CategoryName = a.ToString();
            faq.Category = a.ToString();
            nav.NavigateTo("/category/" + CategoryName);
        }
        faqslist = await faqservice.GetFAQ(faq);
    }
}